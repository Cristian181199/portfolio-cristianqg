---
import { getLangFromUrl, useTranslations } from '../../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const experiences = [
  {
    title: t('experience.php_dev.title'),
    company: t('experience.php_dev.company'),
    location: t('experience.php_dev.location'),
    period: t('experience.php_dev.period'),
    description: t('experience.php_dev.description'),
    tech: t('experience.php_dev.tech')
  },
  {
    title: t('experience.intern.title'),
    company: t('experience.intern.company'),
    location: t('experience.intern.location'),
    period: t('experience.intern.period'),
    description: t('experience.intern.description'),
    tech: t('experience.intern.tech')
  }
];
---

<section id="experience" class="py-20 px-4 bg-secondary/5">
  <div class="container mx-auto max-w-4xl">
    <h2 class="text-4xl md:text-5xl font-bold text-center mb-12">
      {t('experience.title')}
    </h2>
    
    <div class="relative">
      <!-- Continuous timeline line -->
      <div class="absolute left-[15px] top-0 bottom-0 w-0.5 bg-gradient-to-b from-[var(--color-primary)] to-secondary/20"></div>
      
      <div class="space-y-12">
        {experiences.map((exp, index) => (
          <div class="relative pl-12 experience-item group">
            <!-- Timeline dot with pulse animation for current job -->
            <div class={`absolute left-0 top-2 w-8 h-8 rounded-full border-4 border-[var(--bg-primary)] bg-[var(--color-primary)] transition-all duration-300 group-hover:scale-125 ${index === 0 ? 'animate-pulse-soft shadow-lg shadow-[var(--color-primary)]/50' : ''}`}></div>
            
            <div class="bg-[var(--bg-primary)] border-2 border-secondary/10 rounded-xl p-6 transition-all duration-300 hover:border-[var(--color-primary)] hover:shadow-xl hover:shadow-[var(--color-primary)]/10 hover:-translate-y-1">
              <div class="flex flex-col md:flex-row md:justify-between md:items-start mb-3">
                <h3 class="text-2xl font-bold group-hover:text-[var(--color-primary)] transition-colors duration-300">{exp.title}</h3>
                <span class="text-[var(--text-secondary)] text-sm md:text-base font-medium mt-1 md:mt-0">{exp.period}</span>
              </div>
              
              <div class="text-[var(--color-primary)] font-semibold mb-1 text-lg">{exp.company}</div>
              <div class="text-[var(--text-secondary)] text-sm mb-4 flex items-center gap-1">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                {exp.location}
              </div>
              
              <p class="text-[var(--text-secondary)] mb-4 leading-relaxed">{exp.description}</p>
              
              <div class="flex flex-wrap gap-2">
                {exp.tech.map((tech: string) => (
                  <span class="px-3 py-1.5 bg-[var(--color-primary)]/10 text-[var(--color-primary)] rounded-full text-sm font-medium hover:bg-[var(--color-primary)] hover:text-white transition-all duration-300 cursor-default">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<style>
  @keyframes pulse-soft {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.05);
    }
  }
  
  .animate-pulse-soft {
    animation: pulse-soft 3s ease-in-out infinite;
  }
</style>
