---
import { getLangFromUrl, useTranslations } from '../../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section class="py-20 px-4">
  <div class="container mx-auto max-w-4xl">
    <div class="text-center space-y-6">
      <h1 class="text-5xl md:text-6xl font-bold animate-fade-in">
        {t('hero.title')}
      </h1>
      
      <h2 class="text-3xl md:text-4xl font-semibold text-[var(--color-primary)] min-h-[3rem] md:min-h-[4rem]">
        <span id="typewriter"></span>
        <span class="animate-blink">|</span>
      </h2>
      
      <p class="text-lg md:text-xl text-[var(--text-secondary)] max-w-3xl mx-auto leading-relaxed whitespace-pre-line">
        {t('hero.description')}
      </p>
      
      <div class="flex items-center justify-center space-x-2 text-[var(--text-secondary)]">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
        </svg>
        <span>{t('hero.location')}</span>
      </div>
      
      <div class="flex items-center justify-center space-x-6 pt-4">
        <a
          href="https://github.com/Cristian181199"
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center space-x-2 px-6 py-3 bg-[var(--color-primary)] hover:bg-[var(--color-primary)]/80 text-white rounded-lg transition-colors duration-200"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          <span>GitHub</span>
        </a>
        
        <a
          href="https://www.linkedin.com/in/cristian-quintero-garcia/"
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center space-x-2 px-6 py-3 border-2 border-[var(--color-primary)] text-[var(--color-primary)] hover:bg-[var(--color-primary)] hover:text-white rounded-lg transition-colors duration-200"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
          <span>LinkedIn</span>
        </a>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ name: t('hero.name') }}>
  const typewriterElement = document.getElementById('typewriter');
  const text = name;
  let index = 0;
  let isDeleting = false;
  let loopCount = 0;

  function type() {
    if (!typewriterElement) return;

    if (!isDeleting && index <= text.length) {
      typewriterElement.textContent = text.substring(0, index);
      index++;
      setTimeout(type, 100);
    } else if (!isDeleting && index > text.length) {
      setTimeout(() => {
        isDeleting = true;
        type();
      }, 2000);
    } else if (isDeleting && index > 0) {
      typewriterElement.textContent = text.substring(0, index - 1);
      index--;
      setTimeout(type, 50);
    } else if (isDeleting && index === 0) {
      isDeleting = false;
      loopCount++;
      if (loopCount < 3) {
        setTimeout(type, 500);
      } else {
        typewriterElement.textContent = text;
      }
    }
  }

  setTimeout(type, 1000);
</script>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes blink {
    0%, 50% {
      opacity: 1;
    }
    51%, 100% {
      opacity: 0;
    }
  }

  .animate-fade-in {
    animation: fade-in 1s ease-out;
  }

  .animate-blink {
    animation: blink 1s step-end infinite;
  }
</style>
